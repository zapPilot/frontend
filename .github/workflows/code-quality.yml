name: Code Quality

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: "20"

jobs:
  prettier:
    name: Prettier Format Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Check Prettier formatting
        run: npm run format:check

      - name: Run Test
        run: npm run test:coverage

      - name: Comment on PR if formatting issues found
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ **Prettier formatting issues found!**\n\nPlease run `npm run format` to fix formatting issues.'
            })

  eslint:
    name: ESLint Analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint -- --format=@eslint/eslintrc --output-file=eslint-report.json
        continue-on-error: true

      - name: Annotate ESLint results
        uses: ataylorme/eslint-annotate-action@v3
        if: always()
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          report-json: "eslint-report.json"

      - name: Upload ESLint report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: eslint-report
          path: eslint-report.json
          retention-days: 7

  typescript:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: TypeScript type checking
        run: npm run type-check

      - name: Comment on PR if type errors found
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ **TypeScript type errors found!**\n\nPlease run `npm run type-check` locally to see the errors and fix them.'
            })

  code-quality-summary:
    name: Code Quality Summary
    runs-on: ubuntu-latest
    needs: [prettier, eslint, typescript]
    if: always()
    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.prettier.result }}" == "success" && "${{ needs.eslint.result }}" == "success" && "${{ needs.typescript.result }}" == "success" ]]; then
            echo "✅ All code quality checks passed!"
          else
            echo "❌ Some code quality checks failed:"
            echo "Prettier: ${{ needs.prettier.result }}"
            echo "ESLint: ${{ needs.eslint.result }}"
            echo "TypeScript: ${{ needs.typescript.result }}"
            exit 1
          fi
